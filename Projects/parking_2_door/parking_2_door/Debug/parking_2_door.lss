
parking_2_door.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000190  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000190  00000224  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800060  00800060  00000224  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00000224  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000097  00000000  00000000  000008f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  00000987  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000038  00000000  00000000  000009b6  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000101  00000000  00000000  000009ee  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000092  00000000  00000000  00000aef  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000096  00000000  00000000  00000b81  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  0000007c  00000000  00000000  00000c18  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000113  00000000  00000000  00000c94  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000092  00000000  00000000  00000da7  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000028  00000000  00000000  00000e39  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__vector_1>
   8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__vector_2>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a6 36       	cpi	r26, 0x66	; 102
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 70 00 	call	0xe0	; 0xe0 <main>
  74:	0c 94 c6 00 	jmp	0x18c	; 0x18c <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <__vector_1>:
int car_counter = 0;
int sensor_door_1 = 0;
int sensor_door_2 = 0;

ISR(INT0_vect)
{
  7c:	1f 92       	push	r1
  7e:	0f 92       	push	r0
  80:	0f b6       	in	r0, 0x3f	; 63
  82:	0f 92       	push	r0
  84:	11 24       	eor	r1, r1
  86:	8f 93       	push	r24
  88:	9f 93       	push	r25
	/*first door at get in the garage*/
	sensor_door_1 = 1;
  8a:	81 e0       	ldi	r24, 0x01	; 1
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	90 93 63 00 	sts	0x0063, r25
  92:	80 93 62 00 	sts	0x0062, r24
}
  96:	9f 91       	pop	r25
  98:	8f 91       	pop	r24
  9a:	0f 90       	pop	r0
  9c:	0f be       	out	0x3f, r0	; 63
  9e:	0f 90       	pop	r0
  a0:	1f 90       	pop	r1
  a2:	18 95       	reti

000000a4 <__vector_2>:

ISR(INT1_vect)
{
  a4:	1f 92       	push	r1
  a6:	0f 92       	push	r0
  a8:	0f b6       	in	r0, 0x3f	; 63
  aa:	0f 92       	push	r0
  ac:	11 24       	eor	r1, r1
  ae:	8f 93       	push	r24
  b0:	9f 93       	push	r25
	/*second door at get in the garage*/
	sensor_door_2 = 1;
  b2:	81 e0       	ldi	r24, 0x01	; 1
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	90 93 61 00 	sts	0x0061, r25
  ba:	80 93 60 00 	sts	0x0060, r24
}
  be:	9f 91       	pop	r25
  c0:	8f 91       	pop	r24
  c2:	0f 90       	pop	r0
  c4:	0f be       	out	0x3f, r0	; 63
  c6:	0f 90       	pop	r0
  c8:	1f 90       	pop	r1
  ca:	18 95       	reti

000000cc <external_interrupt_config>:

void external_interrupt_config()
{
	MCUCR |=(1<<0)|(1<<1)|(1<<2)|(1<<3);
  cc:	85 b7       	in	r24, 0x35	; 53
  ce:	8f 60       	ori	r24, 0x0F	; 15
  d0:	85 bf       	out	0x35, r24	; 53
	GICR  |=(1<<6)|(1<<7);
  d2:	8b b7       	in	r24, 0x3b	; 59
  d4:	80 6c       	ori	r24, 0xC0	; 192
  d6:	8b bf       	out	0x3b, r24	; 59
	SREG  |=(1<<7);
  d8:	8f b7       	in	r24, 0x3f	; 63
  da:	80 68       	ori	r24, 0x80	; 128
  dc:	8f bf       	out	0x3f, r24	; 63
  de:	08 95       	ret

000000e0 <main>:


int main(void)
{
	/*input*/
	CLEAR_PIN(DIR_PORTD,2);
  e0:	8a 98       	cbi	0x11, 2	; 17
	CLEAR_PIN(DIR_PORTD,3);
  e2:	8b 98       	cbi	0x11, 3	; 17
	/*output*/
	SET_PIN(DIR_PORTB,0);
  e4:	b8 9a       	sbi	0x17, 0	; 23
	SET_PIN(DIR_PORTB,1);
  e6:	b9 9a       	sbi	0x17, 1	; 23
	
	/* 7 seg port*/
	DIR_PORTA=0xff;
  e8:	8f ef       	ldi	r24, 0xFF	; 255
  ea:	8a bb       	out	0x1a, r24	; 26
	
	/*port d init*/
	
	CLEAR_PIN(OUTPUT_PORTB,0);
  ec:	c0 98       	cbi	0x18, 0	; 24
	CLEAR_PIN(OUTPUT_PORTB,1);
  ee:	c1 98       	cbi	0x18, 1	; 24
	
	OUTPUT_PORTA=car_counter;
  f0:	80 91 64 00 	lds	r24, 0x0064
  f4:	8b bb       	out	0x1b, r24	; 27
	
	external_interrupt_config();
  f6:	0e 94 66 00 	call	0xcc	; 0xcc <external_interrupt_config>
       if (sensor_door_1 == 1)
       {
		   if (sensor_door_2 == 1)
		   {
			   car_counter++;
			   TOGGAL_PIN(OUTPUT_PORTB,0);
  fa:	31 e0       	ldi	r19, 0x01	; 1
			   OUTPUT_PORTA=car_counter;
  fc:	e4 e6       	ldi	r30, 0x64	; 100
  fe:	f0 e0       	ldi	r31, 0x00	; 0
	   if(sensor_door_2 == 1)
 	     {
			   if(sensor_door_1 == 1)
			   {
				   car_counter--;
				   TOGGAL_PIN(OUTPUT_PORTB,1);
 100:	22 e0       	ldi	r18, 0x02	; 2
	
	external_interrupt_config();
	
    while(1)
    {
       if (sensor_door_1 == 1)
 102:	80 91 62 00 	lds	r24, 0x0062
 106:	90 91 63 00 	lds	r25, 0x0063
 10a:	01 97       	sbiw	r24, 0x01	; 1
 10c:	e1 f4       	brne	.+56     	; 0x146 <main+0x66>
       {
		   if (sensor_door_2 == 1)
 10e:	80 91 60 00 	lds	r24, 0x0060
 112:	90 91 61 00 	lds	r25, 0x0061
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	a1 f7       	brne	.-24     	; 0x102 <main+0x22>
		   {
			   car_counter++;
 11a:	80 91 64 00 	lds	r24, 0x0064
 11e:	90 91 65 00 	lds	r25, 0x0065
 122:	01 96       	adiw	r24, 0x01	; 1
 124:	90 93 65 00 	sts	0x0065, r25
 128:	80 93 64 00 	sts	0x0064, r24
			   TOGGAL_PIN(OUTPUT_PORTB,0);
 12c:	88 b3       	in	r24, 0x18	; 24
 12e:	83 27       	eor	r24, r19
 130:	88 bb       	out	0x18, r24	; 24
			   OUTPUT_PORTA=car_counter;
 132:	80 81       	ld	r24, Z
 134:	8b bb       	out	0x1b, r24	; 27
			   sensor_door_2=0;
 136:	10 92 61 00 	sts	0x0061, r1
 13a:	10 92 60 00 	sts	0x0060, r1
			   sensor_door_1=0;
 13e:	10 92 63 00 	sts	0x0063, r1
 142:	10 92 62 00 	sts	0x0062, r1
		   }
       }
	   
	   if(sensor_door_2 == 1)
 146:	80 91 60 00 	lds	r24, 0x0060
 14a:	90 91 61 00 	lds	r25, 0x0061
 14e:	01 97       	sbiw	r24, 0x01	; 1
 150:	c1 f6       	brne	.-80     	; 0x102 <main+0x22>
 	     {
			   if(sensor_door_1 == 1)
 152:	80 91 62 00 	lds	r24, 0x0062
 156:	90 91 63 00 	lds	r25, 0x0063
 15a:	01 97       	sbiw	r24, 0x01	; 1
 15c:	91 f6       	brne	.-92     	; 0x102 <main+0x22>
			   {
				   car_counter--;
 15e:	80 91 64 00 	lds	r24, 0x0064
 162:	90 91 65 00 	lds	r25, 0x0065
 166:	01 97       	sbiw	r24, 0x01	; 1
 168:	90 93 65 00 	sts	0x0065, r25
 16c:	80 93 64 00 	sts	0x0064, r24
				   TOGGAL_PIN(OUTPUT_PORTB,1);
 170:	88 b3       	in	r24, 0x18	; 24
 172:	82 27       	eor	r24, r18
 174:	88 bb       	out	0x18, r24	; 24
				   OUTPUT_PORTA=car_counter;
 176:	80 81       	ld	r24, Z
 178:	8b bb       	out	0x1b, r24	; 27
				   sensor_door_1=0;
 17a:	10 92 63 00 	sts	0x0063, r1
 17e:	10 92 62 00 	sts	0x0062, r1
				   sensor_door_2=0;
 182:	10 92 61 00 	sts	0x0061, r1
 186:	10 92 60 00 	sts	0x0060, r1
 18a:	bb cf       	rjmp	.-138    	; 0x102 <main+0x22>

0000018c <_exit>:
 18c:	f8 94       	cli

0000018e <__stop_program>:
 18e:	ff cf       	rjmp	.-2      	; 0x18e <__stop_program>
